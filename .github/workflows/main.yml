name: Run M3U Scraper

on:
  workflow_dispatch: # Run manually from Actions tab
  schedule:
    - cron: "0 */6 * * *" # Optional: every 6 hours

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Puppeteer
        run: npm install puppeteer

      - name: Create scraper script
        run: |
          cat << 'EOF' > scraper.js
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          (async () => {
            const browser = await puppeteer.launch({
              headless: true,
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            const page = await browser.newPage();
            await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0 Safari/537.36');

            const m3uLinks = new Set();

            page.on('request', request => {
              const url = request.url();
              if (url.match(/\.m3u(8)?(\?.*)?$/i)) {
                m3uLinks.add(url);
              }
            });

            await page.goto('https://tvmaniabg.com/nova-tv/', { waitUntil: 'networkidle2' });

            // Wait for player to load
            await new Promise(resolve => setTimeout(resolve, 5000));

            // Also search in HTML in case link is embedded
            const html = await page.content();
            const regex = /https?:\/\/[^\s'"]+\.m3u(8)?[^\s'"]*/gi;
            const matches = html.match(regex);
            if (matches) matches.forEach(loc => m3uLinks.add(loc));

            fs.writeFileSync('links.txt', Array.from(m3uLinks).join('\n'));
            console.log('Found links:', Array.from(m3uLinks));

            await browser.close();
          })();
          EOF

      - name: Run scraper
        run: node scraper.js

      - name: Upload found links
        uses: actions/upload-artifact@v4
        with:
          name: m3u-links
          path: links.txt

